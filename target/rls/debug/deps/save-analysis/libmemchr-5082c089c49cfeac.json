{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memchr","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"libc\"","--cfg","feature=\"use_std\"","-C","metadata=5082c089c49cfeac","-C","extra-filename=-5082c089c49cfeac","--out-dir","/home/hskang9/projectman/target/rls/debug/deps","-L","dependency=/home/hskang9/projectman/target/rls/debug/deps","--extern","libc=/home/hskang9/projectman/target/rls/debug/deps/liblibc-acf58569c759d9b5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/projectman/target/rls/debug/deps/libmemchr-5082c089c49cfeac.rmeta"},"prelude":{"crate_id":{"name":"memchr","disambiguator":[2545102971685750581,4455226327769881783]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[2060317684680475667,12679780790444748951]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":0,"byte_end":27820,"line_start":1,"line_end":881,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":0,"byte_end":27820,"line_start":1,"line_end":881,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":76}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":25},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1621,"byte_end":1627,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":" An iterator for memchr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr>::new","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3590,"byte_end":3596,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3536,"byte_end":3553,"line_start":139,"line_end":139,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5530,"byte_end":5537,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5476,"byte_end":5493,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":6944,"byte_end":6951,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" An iterator for Memchr2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7207,"byte_end":7210,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2>::new","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":8002,"byte_end":8009,"line_start":276,"line_end":276,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9154,"byte_end":9161,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" An iterator for Memchr3\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9425,"byte_end":9428,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3>::new","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new Memchr2 that's initalized to zero with a haystack\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":10278,"byte_end":10285,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2557,"byte_end":2563,"line_start":106,"line_end":106,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7102,"byte_end":7109,"line_start":245,"line_end":245,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7443,"byte_end":7450,"line_start":257,"line_end":257,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9329,"byte_end":9336,"line_start":320,"line_end":320,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9704,"byte_end":9711,"line_start":333,"line_end":333,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":25},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2557,"byte_end":2563,"line_start":106,"line_end":106,"column_start":34,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":25},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7102,"byte_end":7109,"line_start":245,"line_end":245,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7443,"byte_end":7450,"line_start":257,"line_end":257,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9329,"byte_end":9336,"line_start":320,"line_end":320,"column_start":10,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9704,"byte_end":9711,"line_start":333,"line_end":333,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3202}}]}